CREATE DATABASE safepay;

use safepay;

create table `users` (
`id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
`first_name` varchar(100) NOT NULL,
`last_name` varchar(100) NOT NULL,
`email` varchar(255) NOT NULL UNIQUE,
`password_hash` varchar(255),
`status` TINYINT default 1,
`type` TINYINT default 0,
`mobile_number` varchar(20) DEFAULT NULL,
`uuid` varchar(45) DEFAULT NULL,
`created_at` datetime NULL DEFAULT CURRENT_TIMESTAMP,
`updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

create table `order` (
`id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
`sender_id` int(11),
`receiver_id` int(11),
`status` TINYINT default 0,
`service` varchar(255) default '',
`payment_id` int(11),
`grand_total` decimal(7,2),
`created_at` datetime NULL DEFAULT CURRENT_TIMESTAMP,
`updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

create table `payments` (
`id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
`order_id` int(11),
`sender_id` int(11),
`receiver_id` int(11),
`status` TINYINT default 0,
`charge_id` varchar(255) not null,
`amount` decimal(7,2),
`created_at` datetime NULL DEFAULT CURRENT_TIMESTAMP,
`updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (order_id) REFERENCES `order`(id)
);

create table `transaction` (
`id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
`order_id` int(11),
`payment_id` int(11),
`status` TINYINT default 0,
`amount` decimal(7,2),
`from_id` int(11),
`to_id` int(11),
`charge_id` varchar(255) not null,
`created_at` datetime NULL DEFAULT CURRENT_TIMESTAMP,
`updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (order_id) REFERENCES `order`(id),
FOREIGN KEY (payment_id) REFERENCES `payments`(id)
);

create table `user_payment_methods` (
`id` int(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
`user_id` int(11),
`status` TINYINT default 0,
`created_at` datetime NULL DEFAULT CURRENT_TIMESTAMP,
`updated_at` datetime NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY (user_id) REFERENCES `users`(id)
);
